=begin
#DQT API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'cgi'

module OpenapiClient
  class UnlockTeacherApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Unlocks the teacher record allowing the teacher to sign in to the portals
    # @param teacher_id [String] The ID of the teacher record to unlock
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v2_unlock_teacher_teacher_id_put(teacher_id, opts = {})
      v2_unlock_teacher_teacher_id_put_with_http_info(teacher_id, opts)
      nil
    end

    # Unlocks the teacher record allowing the teacher to sign in to the portals
    # @param teacher_id [String] The ID of the teacher record to unlock
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v2_unlock_teacher_teacher_id_put_with_http_info(teacher_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UnlockTeacherApi.v2_unlock_teacher_teacher_id_put ...'
      end
      # verify the required parameter 'teacher_id' is set
      if @api_client.config.client_side_validation && teacher_id.nil?
        fail ArgumentError, "Missing the required parameter 'teacher_id' when calling UnlockTeacherApi.v2_unlock_teacher_teacher_id_put"
      end
      # resource path
      local_var_path = '/v2/unlock-teacher/{teacherId}'.sub('{' + 'teacherId' + '}', CGI.escape(teacher_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/problem+json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"UnlockTeacherApi.v2_unlock_teacher_teacher_id_put",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UnlockTeacherApi#v2_unlock_teacher_teacher_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
